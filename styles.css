const apiUrl = 'http://localhost:5000'; // Replace with your backend URL

function showSection(sectionId) {
    document.getElementById('admin-section').classList.add('hidden');
    document.getElementById('user-section').classList.add('hidden');
    document.getElementById(`${sectionId}-section`).classList.remove('hidden');
}

async function fetchProducts() {
    try {
        const response = await fetch(`${apiUrl}/products`);
        const data = await response.json();
        displayResults(data);
    } catch (error) {
        console.error('Error fetching products:', error);
    }
}

async function fetchSpecificProduct() {
    const id = prompt('Enter Product ID:');
    try {
        const response = await fetch(`${apiUrl}/products/${id}`);
        const data = await response.json();
        displayResults(data);
    } catch (error) {
        console.error('Error fetching specific product:', error);
    }
}

async function addProduct() {
    const name = prompt('Enter Product Name:');
    const price = prompt('Enter Price:');
    const category = prompt('Enter Category:');
    const quantity = prompt('Enter Quantity:');
    const date = prompt('Enter Date (YYYY-MM-DD):');

    try {
        await fetch(`${apiUrl}/products`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, price, category, quantity, date })
        });
        alert('Product added successfully');
    } catch (error) {
        console.error('Error adding product:', error);
    }
}

async function updateProduct() {
    const id = prompt('Enter Product ID to update:');
    const name = prompt('Enter New Product Name (leave blank to keep current):');
    const price = prompt('Enter New Price (leave blank to keep current):');
    const category = prompt('Enter New Category (leave blank to keep current):');
    const quantity = prompt('Enter New Quantity (leave blank to keep current):');
    const date = prompt('Enter New Date (leave blank to keep current):');

    try {
        await fetch(`${apiUrl}/products/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, price, category, quantity, date })
        });
        alert('Product updated successfully');
    } catch (error) {
        console.error('Error updating product:', error);
    }
}

async function deleteProduct() {
    const id = prompt('Enter Product ID to delete:');
    try {
        await fetch(`${apiUrl}/products/${id}`, {
            method: 'DELETE'
        });
        alert('Product deleted successfully');
    } catch (error) {
        console.error('Error deleting product:', error);
    }
}

async function fetchUserReports() {
    try {
        const response = await fetch(`${apiUrl}/user-reports`);
        const data = await response.json();
        displayResults(data);
    } catch (error) {
        console.error('Error fetching user reports:', error);
    }
}

async function fetchUserBills() {
    const userId = prompt('Enter Your User ID:');
    try {
        const response = await fetch(`${apiUrl}/user-bills/${userId}`);
        const data = await response.json();
        displayResults(data);
    } catch (error) {
        console.error('Error fetching user bills:', error);
    }
}

async function buyProduct() {
    const userId = prompt('Enter Your User ID (or 0 for new):');
    const numProducts = prompt('Enter Number of Products:');
    const products = [];

    for (let i = 0; i < numProducts; i++) {
        const id = prompt(`Enter Product ID for Product ${i + 1}:`);
        const quantity = prompt(`Enter Quantity for Product ${i + 1}:`);
        products.push({ id, quantity });
    }

    try {
        await fetch(`${apiUrl}/buy`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ userId, products })
        });
        alert('Purchase completed successfully');
    } catch (error) {
        console.error('Error buying product:', error);
    }
}

function displayResults(data) {
    const resultsDiv = document.querySelector('.results');
    resultsDiv.innerHTML = '<h3>Results</h3>';

    if (Array.isArray(data)) {
        data.forEach(item => {
            const div = document.createElement('div');
            div.innerHTML = JSON.stringify(item, null, 2);
            div.classList.add('result-item');
            resultsDiv.appendChild(div);
        });
    } else {
        const div = document.createElement('div');
        div.innerHTML = JSON.stringify(data, null, 2);
        div.classList.add('result-item');
        resultsDiv.appendChild(div);
    }
}

